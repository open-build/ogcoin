# GitHub Actions workflow for deploying ForgeWeb sites to GitHub Pages
# This workflow builds and deploys static content to GitHub Pages

name: Deploy ForgeWeb to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f admin/requirements.txt ]; then pip install -r admin/requirements.txt; fi
          
      - name: Validate site structure
        run: |
          echo "Validating ForgeWeb site structure..."
          # Check for required files
          test -f admin/site-config.json || (echo "Missing site-config.json" && exit 1)
          test -f admin/index.html || (echo "Missing admin interface" && exit 1)
          # Validate configuration
          python -c "import json; json.load(open('admin/site-config.json'))" || (echo "Invalid site-config.json" && exit 1)
          echo "Site structure validation passed!"
          
      - name: Generate site content (if needed)
        run: |
          echo "Checking for generated content..."
          # If no HTML files exist in root, this might be a fresh setup
          if [ ! -f index.html ] && [ ! -f articles.html ]; then
            echo "No generated content found. This appears to be a fresh ForgeWeb setup."
            echo "Content should be generated using the admin interface before deployment."
            # Create a basic index file for the deployment
            cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>ForgeWeb Site - Setup Required</title>
              <script src="https://cdn.tailwindcss.com"></script>
          </head>
          <body class="bg-gray-50 min-h-screen flex items-center justify-center">
              <div class="max-w-md mx-auto text-center p-8 bg-white rounded-lg shadow-lg">
                  <h1 class="text-2xl font-bold text-gray-900 mb-4">ForgeWeb Site</h1>
                  <p class="text-gray-600 mb-6">This site is powered by ForgeWeb but hasn't been set up yet.</p>
                  <div class="space-y-4">
                      <p class="text-sm text-gray-500">To get started:</p>
                      <ol class="text-left text-sm text-gray-600 space-y-2">
                          <li>1. Clone this repository locally</li>
                          <li>2. Run the ForgeWeb admin interface</li>
                          <li>3. Create your content and pages</li>
                          <li>4. Commit and push your changes</li>
                      </ol>
                  </div>
                  <a href="admin/" class="inline-block mt-6 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                      Admin Interface
                  </a>
              </div>
          </body>
          </html>
          EOF
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository (static files)
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2