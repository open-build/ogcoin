# Kubernetes Deployment for ForgeWeb
# Deploy ForgeWeb to a Kubernetes cluster with persistent storage and scaling

apiVersion: v1
kind: Namespace
metadata:
  name: forgeweb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: forgeweb-config
  namespace: forgeweb
data:
  site-config.json: |
    {
      "site": {
        "name": "ForgeWeb Site",
        "url": "https://your-domain.com",
        "description": "AI-powered static site generator"
      },
      "content": {
        "articlesFolder": "articles/",
        "indexFile": "articles.html"
      },
      "branding": {
        "primaryColor": "#1b5fa3",
        "secondaryColor": "#144a84"
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: forgeweb-storage
  namespace: forgeweb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forgeweb
  namespace: forgeweb
  labels:
    app: forgeweb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: forgeweb
  template:
    metadata:
      labels:
        app: forgeweb
    spec:
      containers:
      - name: forgeweb
        image: ghcr.io/buildlyio/forgeweb:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: PYTHONUNBUFFERED
          value: "1"
        volumeMounts:
        - name: content-storage
          mountPath: /app/content
        - name: config
          mountPath: /app/admin/site-config.json
          subPath: site-config.json
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /admin/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /admin/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: content-storage
        persistentVolumeClaim:
          claimName: forgeweb-storage
      - name: config
        configMap:
          name: forgeweb-config
---
apiVersion: v1
kind: Service
metadata:
  name: forgeweb-service
  namespace: forgeweb
spec:
  selector:
    app: forgeweb
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: forgeweb-ingress
  namespace: forgeweb
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: forgeweb-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: forgeweb-service
            port:
              number: 80